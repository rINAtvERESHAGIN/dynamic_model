import requests
import importlib
from http import HTTPStatus
from django.core.management.base import CommandError, BaseCommand
from django.apps import apps
from config.utils import EnviromentVariable
from django.conf import settings

env = EnviromentVariable()


class Command(BaseCommand):
    help = 'register models in apiendpoint'

    def handle(self, *args, **options):
        data = []
        for app in apps.get_app_configs():
            if app.name in settings.API_INSTANCE_MODELS:
                for model in app.get_models():
                    if model.__name__ in settings.API_INSTANCE_MODELS[app.name]:
                        data.append(
                            model.__name__
                        )
        responce = requests.request(
            method='POST',
            url=settings.API_END_POINT_URL + '/instance/signal/register/senders/',
            data={
                'token': settings.API_TOKEN,
                'models': data
            }
        )
        if responce.status_code != HTTPStatus.OK:
            self.stdout.write(
                self.style.ERROR(
                    'Cant register models: status_code {0}, msg: {1}'.format(
                        responce.status_code,
                        responce.content
                    )
                )
            )
        else:
            result = responce.json()
            self.stdout.write(self.style.SUCCESS('Models registration:'))
            for (idx ,id) in enumerate(result['registered']):
                self.stdout.write(
                    self.style.SUCCESS(
                        'Register model "{0}" with id "{1}"'.format(
                            data[idx],
                            id
                        )
                    )
                )
            data = []
            for sender in settings.API_INSTANCE_DEPENDENCIES.keys():
                data.append(sender)
            if len(data) > 0:
                responce = requests.request(
                    method='POST',
                    url=settings.API_END_POINT_URL + '/instance/signal/register/listeners/',
                    data={
                        'token': settings.API_TOKEN,
                        'senders': data
                    }
                )
                if responce.status_code != HTTPStatus.OK:
                    # print(responce.status_code)
                    # print(responce.content)
                    self.stdout.write(
                        self.style.ERROR(
                            'Cant register models: status_code {0}, msg: {}'.format(
                                responce.status_code,
                                responce.content
                            )
                        )
                    )
                else:
                    result = responce.json()
                    self.stdout.write(self.style.SUCCESS('Listeners registration:'))
                    for listener in result['registered']:
                        self.stdout.write(
                            self.style.SUCCESS(
                                'Register listner to "{0}" with msg "{1}"'.format(
                                    listener['sender'],
                                    listener['msg']
                                )
                            )
                        )
            else:
                self.stdout.write(self.style.SUCCESS('Nothing listeners to register (did you forget add it in API_INSTANCE_DEPENDENCIES?).'))






