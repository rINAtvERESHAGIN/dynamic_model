import uuid
from django.db.models import Model, UUIDField, CharField, DateTimeField, BooleanField
from .choices import SIGNAL_TYPE_CHOICES
from mscore.constants import CREATE_SIGNAL_TYPE, FREEZE_SIGNAL_TYPE, DEFREEZE_SIGNAL_TYPE
from .relationbasemodel import RelationBaseModel


class ReceivedSignal(Model):
    uid = UUIDField(default=uuid.uuid4)
    signal = UUIDField()
    sender = CharField(max_length=100)
    type = CharField(max_length=10, choices=SIGNAL_TYPE_CHOICES)
    object = UUIDField(blank=True)
    received = DateTimeField(auto_now_add=True)
    is_success = BooleanField(default=False)

    def execute(self):
        '''
        execute recived signal to cross instance relation object
        :return:no return
        '''
        object = RelationBaseModel.default_manager.get_or_create(
            uid=self.object,
            model=self.sender
        )[0]
        if self.type == CREATE_SIGNAL_TYPE:
            if object.pk is not None:
                return True
        else:
            # object = RelationBaseModel.objects.get(model=self.sender, uid=self.object)
            if self.type == FREEZE_SIGNAL_TYPE:
                object.delete()
                if object.is_freeze:
                    return True
                else:
                    return False
            elif self.type == DEFREEZE_SIGNAL_TYPE:
                object.defreeze()
                if object.is_freeze:
                    return False
                else:
                    return True
        return False